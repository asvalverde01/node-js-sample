name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Puedes usar 'zulu', 'adopt', etc.
          java-version: '17'

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v2.0
        with:
          args: >
            -Dsonar.projectKey=tu_proyecto_key
            -Dsonar.organization=tu_organizacion
            -Dsonar.host.url=https://sonarcloud.io
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-js-sample:latest .

      - name: Push to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/node-js-sample:latest

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@v0.7.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/node-js-sample:latest

  deploy-to-test:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to Test Environment
        run: |
          echo "Simulando despliegue en un entorno de pruebas..."

  deploy-to-production:
    runs-on: ubuntu-latest
    needs: deploy-to-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Validate Deployment Policies (OPA)
        run: |
          echo "Validando Políticas con Open Policy Agent (OPA) - Ejemplo"

      - name: Deploy to Production (Simulated)
        run: |
          echo "Desplegando en un entorno de producción simulado..."
